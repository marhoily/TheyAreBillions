<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>